syntax = "proto3";

package surf.surf;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "surf/surf/params.proto";
import "surf/surf/world_id_to_user.proto";
import "surf/surf/user_to_world_id.proto";

option go_package = "surf/x/surf/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/surf/surf/params";
  
  }
  
  // Queries a list of WorldIdtoUser items.
  rpc WorldIdtoUser    (QueryGetWorldIdtoUserRequest) returns (QueryGetWorldIdtoUserResponse) {
    option (google.api.http).get = "/surf/surf/world_id_to_user/{index}";
  
  }
  rpc WorldIdtoUserAll (QueryAllWorldIdtoUserRequest) returns (QueryAllWorldIdtoUserResponse) {
    option (google.api.http).get = "/surf/surf/world_id_to_user";
  
  }
  
  // Queries a list of UserToWorldId items.
  rpc UserToWorldId    (QueryGetUserToWorldIdRequest) returns (QueryGetUserToWorldIdResponse) {
    option (google.api.http).get = "/surf/surf/user_to_world_id/{index}";
  
  }
  rpc UserToWorldIdAll (QueryAllUserToWorldIdRequest) returns (QueryAllUserToWorldIdResponse) {
    option (google.api.http).get = "/surf/surf/user_to_world_id";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetWorldIdtoUserRequest {
  string index = 1;
}

message QueryGetWorldIdtoUserResponse {
  WorldIdtoUser worldIdtoUser = 1 [(gogoproto.nullable) = false];
}

message QueryAllWorldIdtoUserRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWorldIdtoUserResponse {
  repeated WorldIdtoUser                          worldIdtoUser = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetUserToWorldIdRequest {
  string index = 1;
}

message QueryGetUserToWorldIdResponse {
  UserToWorldId userToWorldId = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserToWorldIdRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserToWorldIdResponse {
  repeated UserToWorldId                          userToWorldId = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

